/*

‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñà‚ñà‚ïó‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë
‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó
‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñë‚ñë‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïó‚ñë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ñà‚ñà‚ñà‚ñà‚ïî‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë
‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïù‚ñë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñë‚ñë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ñë‚ïö‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ïë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë
‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñë‚ïö‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñë‚ñë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñë‚ïö‚ñà‚ñà‚ñà‚ïë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ïë‚ñë‚ïö‚ïê‚ïù‚ñë‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù
‚ïö‚ïê‚ïù‚ñë‚ñë‚ñë‚ñë‚ñë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ïö‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïù‚ñë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë‚ïö‚ïê‚ïù‚ñë‚ñë‚ïö‚ïê‚ïê‚ïù‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ïö‚ïê‚ïù‚ñë‚ñë‚ñë‚ñë‚ñë‚ïö‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ñë
*/

const fs = require("fs");
const Jimp = require("jimp");
const moment = require("moment-timezone");
const {
  banUser, //----------------------- BAN
  checkBan, // --------------------- CHECK BAN STATUS
  unbanUser, // -------------------- UNBAN
  addMod, // ----------------------- ADD MOD
  checkMod, // --------------------- CHECK MOD STATUS
  delMod, // ----------------------- DEL MOD
  setChar, // ---------------------- SET CHAR ID
  getChar, // ---------------------- GET CHAR ID
  activateChatBot, // -------------- ACTIVATE PM CHATBOT
  checkPmChatbot, // --------------- CHECK PM CHATBOT STATUS
  deactivateChatBot, // ------------ DEACTIVATE PM CHATBOT
  setBotMode, // ------------------- SET BOT MODE
  getBotMode, // ------------------- GET BOT MODE
  banGroup, // --------------------- BAN GROUP
  checkBanGroup, //----------------- CHECK BAN STATUS OF A GROUP
  unbanGroup, // ------------------- UNBAN GROUP
} = require("../System/MongoDB/MongoDb_Core");

const {
  userData,
  groupData,
  systemData,
} = require("../System/MongoDB/MongoDB_Schema.js");

let mergedCommands = [
  "addmod",
  "setmod",
  "delmod",
  "removemod",
  "modlist",
  "mods",
  "ban",
  "banuser",
  "unban",
  "unbanuser",
  "banlist",
  "listbans",
  "setchar",
  "dmchatbot",
  "pmchatbot",
  "bangroup",
  "bangc",
  "unbangroup",
  "unbangc",
  "setbotmode",
  "mode",
];

module.exports = {
  name: "moderators",
  alias: [...mergedCommands],
  uniquecommands: [
    "addmod",
    "delmod",
    "mods",
    "ban",
    "unban",
    "banlist",
    "setchar",
    "pmchatbot",
    "bangroup",
    "unbangroup",
    "mode",
  ],
  description: "All Moderator/Owner Commands",
  start: async (
    Pendragon,
    m,
    {
      inputCMD,
      text,
      mods,
      isCreator,
      banData,
      prefix,
      db,
      isintegrated,
      doReact,
      args,
      itsMe,
      participants,
      metadata,
      mentionByTag,
      mime,
      isMedia,
      quoted,
      botNumber,
      isBotAdmin,
      groupAdmin,
      isAdmin,
      pushName,
      groupName,
    }
  ) => {
   isUsermod = await checkMod(m.sender);
        if (!isCreator && !isintegrated && !isUsermod) {
          await doReact("‚ùå");
          return m.reply(
            "‡∑É‡∂∏‡∑è‡∑Ä‡∂±‡∑ä‡∂±, ‡∂∏‡∑ô‡∂∏ ‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫ ‡∂∑‡∑è‡∑Ä‡∑í‡∂≠‡∑è ‡∂ö‡∑Ö ‡∑Ñ‡∑ê‡∂ö‡∑ä‡∂ö‡∑ö ‡∂∏‡∂ú‡∑ö *Mods* ‡∂¥‡∂∏‡∂´‡∑í!"
          );
        }
    switch (inputCMD) {
      case "addmod":
      case "setmod":
        if (!text && !m.quoted) {
          await doReact("‚ùå");
          return m.reply(`‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª *‡∂∏‡∑ú‡∂©‡∑ä* ‡∑É‡∑ë‡∂Ø‡∑ì‡∂∏‡∂ß ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑ô‡∂ö‡∑î ‡∂ß‡∑ê‡∂ú‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±!`);
        }
         mentionedUser = m.quoted ? m.quoted.sender : mentionByTag[0];
        userId = mentionedUser;
        isUsermod = await checkMod(userId);
        if (!isCreator && !isintegrated && isUsermod) {
          await doReact("‚ùå");
          return m.reply(
            "‡∑É‡∂∏‡∑è‡∑Ä‡∂±‡∑ä‡∂±, ‡∂∏‡∑ô‡∂∏ ‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫ ‡∂∑‡∑è‡∑Ä‡∑í‡∂≠‡∑è ‡∂ö‡∑Ö ‡∑Ñ‡∑ê‡∂ö‡∑ä‡∂ö‡∑ö ‡∂∏‡∂ú‡∑ö *‡∑Ñ‡∑í‡∂∏‡∑í‡∂ö‡∂ª‡∑î‡∂ß* ‡∂¥‡∂∏‡∂´‡∑í! *Added Mods* ‡∑Ñ‡∂ß ‡∂∏‡∑ô‡∂∏ ‡∂Ö‡∑Ä‡∑É‡∂ª‡∂∫ ‡∂±‡∑ú‡∂∏‡∑ê‡∂≠."
          );
        }
        if (!userId) return m.reply("‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª ‡∂≠‡∑Ñ‡∂±‡∂∏‡∑ä ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∂ß ‡∑Ä‡∂Ω‡∂Ç‡∂ú‡∑î ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑ô‡∂ö‡∑î ‡∑É‡∂≥‡∑Ñ‡∂±‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±!");

        try {
          if (isUsermod) {
            await doReact("‚úÖ");
            return Pendragon.sendMessage(
              m.from,
              {
                text: `@${userId.split("@")[0]} ‡∂Ø‡∑ê‡∂±‡∂ß‡∂∏‡∂≠‡∑ä mod ‡∂Ω‡∑ô‡∑É ‡∂Ω‡∑í‡∂∫‡∑è‡∂¥‡∂Ø‡∑í‡∂Ç‡∂†‡∑í ‡∑Ä‡∑ì ‡∂á‡∂≠`,
                mentions: [userId],
              },
              { quoted: m }
            );
          }

          // Add user to the mods list and save to the database
          await doReact("‚úÖ");
          await addMod(userId)
            .then(() => {
              Pendragon.sendMessage(
                m.from,
                {
                  text: `@${
                    userId.split("@")[0]
                  } mods ‡∑Ä‡∑ô‡∂≠ ‡∑É‡∑è‡∂ª‡∑ä‡∂Æ‡∂ö‡∑Ä ‡∂Ω‡∑í‡∂∫‡∑è‡∂¥‡∂Ø‡∑í‡∂Ç‡∂†‡∑í ‡∑Ä‡∑ì ‡∂á‡∂≠`,
                  mentions: [userId],
                },
                { quoted: m }
              );
            })
            .catch((err) => {
              console.log(err);
            });
        } catch (err) {
          console.log(err);
        }
        break;

      case "delmod":
      case "removemod":
        // Check if a user is mentioned
        if (!text && !m.quoted) {
          await doReact("‚ùî");
          return m.reply(`‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª *mod* ‡∑Ä‡∑ô‡∂≠‡∑í‡∂±‡∑ä ‡∂â‡∑Ä‡∂≠‡∑ä ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∂ß ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑ô‡∂ö‡∑î ‡∂ß‡∑ê‡∂ú‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±!`);
        }
        mentionedUser = m.quoted ? m.quoted.sender : mentionByTag[0];
        userId = mentionedUser;
        isUsermod = await checkMod(userId);
        if (!isCreator && !isintegrated && isUsermod) {
          await doReact("‚ùå");
          return m.reply(
            "‡∑É‡∂∏‡∑è‡∑Ä‡∂±‡∑ä‡∂±, ‡∂∏‡∑ô‡∂∏ ‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫ ‡∂∑‡∑è‡∑Ä‡∑í‡∂≠‡∑è ‡∂ö‡∑Ö ‡∑Ñ‡∑ê‡∂ö‡∑ä‡∂ö‡∑ö ‡∂∏‡∂ú‡∑ö *‡∑Ñ‡∑í‡∂∏‡∑í‡∂ö‡∂ª‡∑î‡∂ß* ‡∂¥‡∂∏‡∂´‡∑í! *Added Mods* ‡∑Ñ‡∂ß ‡∂∏‡∑ô‡∂∏ ‡∂Ö‡∑Ä‡∑É‡∂ª‡∂∫ ‡∂±‡∑ú‡∂∏‡∑ê‡∂≠."
          );
        }
        if (!userId) return m.reply("‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª ‡∂≠‡∑Ñ‡∂±‡∂∏‡∑ä ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∂ß ‡∑Ä‡∂Ω‡∂Ç‡∂ú‡∑î ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑ô‡∂ö‡∑î ‡∑É‡∂≥‡∑Ñ‡∂±‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±!");

        try {
          if (!isUsermod) {
            await doReact("‚úÖ");
            return Pendragon.sendMessage(
              m.from,
              {
                text: `@${userId.split("@")[0]} ‡∂∏‡∑è‡∂Ø‡∑í‡∂Ω‡∑í‡∂∫‡∂ö‡∑ä ‡∂Ω‡∑ô‡∑É ‡∂Ω‡∑í‡∂∫‡∑è‡∂¥‡∂Ø‡∑í‡∂Ç‡∂†‡∑í ‡∑Ä‡∑ì ‡∂±‡∑ú‡∂∏‡∑ê‡∂≠ !`,
                mentions: [userId],
              },
              { quoted: m }
            );
          }

          await delMod(userId)
            .then(() => {
              Pendragon.sendMessage(
                m.from,
                {
                  text: `@${
                    userId.split("@")[0]
                  } mods ‡∑Ä‡∑ô‡∂≠ ‡∑É‡∑è‡∂ª‡∑ä‡∂Æ‡∂ö‡∑Ä ‡∂â‡∑Ä‡∂≠‡∑ä ‡∂ö‡∂ª ‡∂á‡∂≠`,
                  mentions: [userId],
                },
                { quoted: m }
              );
            })
            .catch((err) => {
              console.log(err);
            });
        } catch (err) {
          console.log(err);
        }
        break;

      case "modlist":
      case "mods":
        await doReact("‚úÖ");
        try {
          var modlist = await userData.find({ addedMods: "true" });
          var modlistString = "";
          var ownerList = global.owner;
          modlist.forEach((mod) => {
            modlistString += `\n@${mod.id.split("@")[0]}\n`;
          });
          var mention = await modlist.map((mod) => mod.id);
          let xy = modlist.map((mod) => mod.id);
          let yz = ownerList.map((owner) => owner + "@s.whatsapp.net");
          let xyz = xy.concat(yz);

          ment = [ownerList.map((owner) => owner + "@s.whatsapp.net"), mention];
          let textM = `    üß£  *${botName} ‡∂∏‡∑ù‡∂©‡∑ä‡∑É‡∑ä*  üß£\n\n`;

          if (ownerList.length == 0) {
            textM = "*‡∂ö‡∑í‡∑É‡∑í‡∂Ø‡∑î Mods ‡∂ë‡∂ö‡∂≠‡∑î ‡∂ö‡∂ª ‡∂±‡∑ê‡∂≠ !*";
          }

          textM += `\n„ÄΩÔ∏è *‡∂Ö‡∂∫‡∑í‡∂≠‡∑í‡∂ö‡∂ª‡∑î‡∑Ä‡∂±‡∑ä* „ÄΩÔ∏è\n`;

          for (var i = 0; i < ownerList.length; i++) {
            textM += `\n„ÄÑ  @${ownerList[i]}\n`;
          }

          if (modlistString != "") {
            textM += `\nüß© *Mods ‡∂ë‡∂ö‡∂≠‡∑î ‡∂ö‡∂ª‡∂± ‡∂Ω‡∂Ø‡∑í* üß©\n`;
            for (var i = 0; i < modlist.length; i++) {
              textM += `\n„ÄÑ  @${modlist[i].id.split("@")[0]}\n`;
            }
          }

          if (modlistString != "" || ownerList.length != 0) {
            textM += `\n\nüìõ *‡∂Ö‡∑Ä‡∑Ñ‡∑í‡∂ª ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏ ‡∑Ä‡∑Ö‡∂ö‡∑ä‡∑Ä‡∑è ‡∂ú‡∑ê‡∂±‡∑ì‡∂∏‡∂ß ‡∂î‡∑Ä‡∑î‡∂±‡∑ä ‡∂Ö‡∂∫‡∑è‡∂†‡∑í‡∂≠ ‡∂≠‡∑ê‡∂¥‡∑ê‡∂Ω‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂± ‡∂ë‡∂¥‡∑è!*\n\nüéÄ ‡∂ï‡∂±‡∑ë‡∂∏ ‡∂ã‡∂Ø‡∑Ä‡∑ä‡∑Ä‡∂ö‡∑ä ‡∑É‡∂≥‡∑Ñ‡∑è, type *${prefix}support* and ask in group.\n\n*üí´ Thanks for using ${botName}. üí´*\n`;
          }

          Pendragon.sendMessage(
            m.from,
            {
              video: { url: botVideo },
              gifPlayback: true,
              caption: textM,
              mentions: xyz,
            },
            { quoted: m }
          );
        } catch (err) {
          console.log(err);
          await doReact("‚ùå");
          return Pendragon.sendMessage(
            m.from,
            { text: `‡∂∏‡∑ù‡∂©‡∑ä ‡∂Ω‡∑ê‡∂∫‡∑í‡∑É‡∑ä‡∂≠‡∑î‡∑Ä ‡∂Ω‡∂∂‡∑è ‡∂ú‡∑ê‡∂±‡∑ì‡∂∏‡∑ö‡∂Ø‡∑ì ‡∂Ö‡∂∑‡∑ä‚Äç‡∂∫‡∂±‡∑ä‡∂≠‡∂ª ‡∂Ø‡∑ù‡∑Ç‡∂∫‡∂ö‡∑ä ‡∂á‡∂≠‡∑í ‡∑Ä‡∑í‡∂∫.` },
            { quoted: m }
          );
        }

        break;

      case "ban":
      case "banuser":
        if (!text && !m.quoted) {
          await doReact("‚ùå");
          return Pendragon.sendMessage(
            m.from,
            { text: `‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑ô‡∂ö‡∑î *‡∂≠‡∑Ñ‡∂±‡∂∏‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±*!` },
            { quoted: m }
          );
        } else if (m.quoted) {
          var mentionedUser = m.quoted.sender;
        } else {
          var mentionedUser = mentionByTag[0];
        }
        chechSenderModStatus = await checkMod(m.sender);
        if (!chechSenderModStatus && !isCreator && !isintegrated) {
          await doReact("‚ùå");
          return Pendragon.sendMessage(m.from, {
            text: `‡∑É‡∂∏‡∑è‡∑Ä‡∂±‡∑ä‡∂±, ‡∂∏‡∑ô‡∂∏ ‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫ ‡∂∑‡∑è‡∑Ä‡∑í‡∂≠‡∑è ‡∂ö‡∑Ö ‡∑Ñ‡∑ê‡∂ö‡∑ä‡∂ö‡∑ö *‡∑Ñ‡∑í‡∂∏‡∑í‡∂ö‡∂ª‡∑î‡∑Ä‡∂±‡∑ä* ‡∑É‡∑Ñ *Mods* ‡∂¥‡∂∏‡∂´‡∑í!`,
            quoted: m,
          });
        }
        userId = (await mentionedUser) || m.msg.contextInfo.participant;
        chechBanStatus = await checkBan(userId);
        checkUserModStatus = await checkMod(userId);
        userNum = userId.split("@")[0];
        globalOwner = global.owner;
        if (checkUserModStatus == true || globalOwner.includes(userNum)) {
          await doReact("‚ùå");
          return m.reply(`‡∑É‡∂∏‡∑è‡∑Ä‡∂±‡∑ä‡∂±, ‡∂∏‡∂ß *‡∑Ñ‡∑í‡∂∏‡∑í‡∂ö‡∂ª‡∑î‡∑Ä‡∑ô‡∂ö‡∑î* ‡∑Ñ‡∑ù *‡∂∏‡∑ú‡∂©‡∑ä* ‡∂≠‡∑Ñ‡∂±‡∂∏‡∑ä ‡∂ö‡∑Ö ‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö!`);
        }
        if (chechBanStatus) {
          await doReact("‚úÖ");
          return Pendragon.sendMessage(
            m.from,
            {
              text: `@${mentionedUser.split("@")[0]} ‡∂Ø‡∑ê‡∂±‡∂ß‡∂∏‡∂≠‡∑ä *‡∂≠‡∑Ñ‡∂±‡∂∏‡∑ä ‡∂ö‡∂ª ‡∂á‡∂≠* !`,
              mentions: [mentionedUser],
            },
            { quoted: m }
          );
        } else {
          banUser(userId).then(async () => {
            await doReact("‚úÖ");
            await Pendragon.sendMessage(
              m.from,
              {
                text: `@${
                  mentionedUser.split("@")[0]
                } *${pushName}* ‡∑Ä‡∑í‡∑É‡∑í‡∂±‡∑ä ‡∑É‡∑è‡∂ª‡∑ä‡∂Æ‡∂ö‡∑Ä *‡∂≠‡∑Ñ‡∂±‡∂∏‡∑ä ‡∂ö‡∂ª ‡∂á‡∂≠*`,
                mentions: [mentionedUser],
              },
              { quoted: m }
            );
          });
        }

        break;

      case "unban":
      case "unbanuser":
        if (!text && !m.quoted) {
          await doReact("‚ùå");
          return m.reply(`‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑ô‡∂ö‡∑î *‡∂≠‡∑Ñ‡∂±‡∂∏‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±* ‡∑Ä‡∑ô‡∂≠ ‡∂ß‡∑ê‡∂ú‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±!`);
        } else if (m.quoted) {
          var mentionedUser = m.quoted.sender;
        } else {
          var mentionedUser = mentionByTag[0];
        }
        chechSenderModStatus = await checkMod(m.sender);
        if (!chechSenderModStatus && !isCreator && !isintegrated) {
          await doReact("‚ùå");
          return Pendragon.sendMessage(m.from, {
            text: `‡∑É‡∂∏‡∑è‡∑Ä‡∂±‡∑ä‡∂±, ‡∂∏‡∑ô‡∂∏ ‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫ ‡∂∑‡∑è‡∑Ä‡∑í‡∂≠‡∑è ‡∂ö‡∑Ö ‡∑Ñ‡∑ê‡∂ö‡∑ä‡∂ö‡∑ö *‡∑Ñ‡∑í‡∂∏‡∑í‡∂ö‡∂ª‡∑î‡∑Ä‡∂±‡∑ä* ‡∑É‡∑Ñ *Mods* ‡∂¥‡∂∏‡∂´‡∑í!`,
            quoted: m,
          });
        }
        userId = (await mentionedUser) || m.msg.contextInfo.participant;
        chechBanStatus = await checkBan(userId);
        if (chechBanStatus) {
          unbanUser(userId).then(async () => {
            await doReact("‚úÖ");
            await Pendragon.sendMessage(
              m.from,
              {
                text: `@${
                  mentionedUser.split("@")[0]
                } *${pushName}* ‡∑Ä‡∑í‡∑É‡∑í‡∂±‡∑ä ‡∑É‡∑è‡∂ª‡∑ä‡∂Æ‡∂ö‡∑Ä *‡∂≠‡∑Ñ‡∂±‡∂∏‡∑ä ‡∂±‡∑ú‡∂ö‡∑Ö* ‡∂ö‡∂ª ‡∂á‡∂≠.`,
                mentions: [mentionedUser],
              },
              { quoted: m }
            );
          });
        } else {
          await doReact("‚ùå");
          return Pendragon.sendMessage(m.from, {
            text: `@${mentionedUser.split("@")[0]} *‡∂≠‡∑Ñ‡∂±‡∂∏‡∑ä ‡∂ö‡∂ª ‡∂±‡∑ê‡∂≠* !`,
            mentions: [mentionedUser],
            quoted: m,
          });
        }
        break;

      case "setchar":
        if (!text) {
          await doReact("‚ùå");
          return Pendragon.sendMessage(
            m.from,
            { text: `‡∑É‡∑ê‡∂ö‡∑É‡∑ì‡∂∏‡∂ß ‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª 0-2 ‡∂Ö‡∂≠‡∂ª ‡∂Ö‡∂ö‡∑ä‡∑Ç‡∂ª ‡∂Ö‡∂Ç‡∂ö‡∂∫‡∂ö‡∑ä ‡∂á‡∂≠‡∑î‡∑Ö‡∂≠‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±!` },
            { quoted: m }
          );
        }
        chechSenderModStatus = await checkMod(m.sender);
        if (!chechSenderModStatus && !isCreator && !isintegrated) {
          await doReact("‚ùå");
          return Pendragon.sendMessage(m.from, {
            text: `‡∑É‡∂∏‡∑è‡∑Ä‡∂±‡∑ä‡∂±, ‡∂∏‡∑ô‡∂∏ ‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫ ‡∂∑‡∑è‡∑Ä‡∑í‡∂≠‡∑è ‡∂ö‡∑Ö ‡∑Ñ‡∑ê‡∂ö‡∑ä‡∂ö‡∑ö *‡∑Ñ‡∑í‡∂∏‡∑í‡∂ö‡∂ª‡∑î‡∑Ä‡∂±‡∑ä* ‡∑É‡∑Ñ *Mods* ‡∂¥‡∂∏‡∂´‡∑í!`,
            quoted: m,
          });
        }

        const intinput = parseInt(text);
        if (intinput < 0 || intinput > 19) {
          await doReact("‚ùå");
          return Pendragon.sendMessage(
            m.from,
            { text: `‡∑É‡∑ê‡∂ö‡∑É‡∑ì‡∂∏‡∂ß ‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª 0-2 ‡∂Ö‡∂≠‡∂ª ‡∂Ö‡∂ö‡∑ä‡∑Ç‡∂ª ‡∂Ö‡∂Ç‡∂ö‡∂∫‡∂ö‡∑ä ‡∂á‡∂≠‡∑î‡∑Ö‡∂≠‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±!` },
            { quoted: m }
          );
        }
        const botNames = [
          "Pendragon MD",
          "Queen Amdi",
          "Sew Queen",
        ];
        const botLogos = [
          "https://wallpapercave.com/wp/wp5924545.jpg", //Pendragon Md
          "https://wallpapercave.com/wp/wp11253614.jpg", //Queen Amdi
          "https://images5.alphacoders.com/126/1264439.jpg", //Sew Queen
        ];

        checkChar = await getChar();
        if (checkChar === intinput) {
          await doReact("‚úÖ");
          return Pendragon.sendMessage(
            m.from,
            {
              image: { url: botLogos[intinput] },
              caption: `‡∂Ö‡∂ö‡∑ä‡∑Ç‡∂ª ‡∂Ö‡∂Ç‡∂ö‡∂∫ *${intinput}* - *${botNames[intinput]}* ‡∂Ø‡∑ê‡∂±‡∂ß‡∂∏‡∂≠‡∑ä ‡∂¥‡∑ô‡∂ª‡∂±‡∑í‡∂∏‡∑í‡∂∫ ‡∑Ä‡∑ö!`,
            },
            { quoted: m }
          );
        }
        await doReact("‚úÖ");
        await setChar(intinput);
        await Pendragon.sendMessage(
          m.from,
          {
            image: { url: botLogos[intinput] },
            caption: `‡∂Ö‡∂ö‡∑ä‡∑Ç‡∂ª ‡∂Ö‡∂Ç‡∂ö‡∂∫ *${intinput}* - *${botNames[intinput]}* *${pushName}* ‡∑Ä‡∑í‡∑É‡∑í‡∂±‡∑ä ‡∑É‡∑è‡∂ª‡∑ä‡∂Æ‡∂ö‡∑Ä ‡∑É‡∂ö‡∑É‡∑è ‡∂á‡∂≠.`,
          },
          { quoted: m }
        );
        break;

      case "dmchatbot":
      case "pmchatbot":
        if (!text) {
          await doReact("‚ùå");
          return m.reply(
            `‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª ‡∂ö‡∑ä‚Äç‡∂ª‡∑í‡∂∫‡∑è‡∂≠‡∑ä‡∂∏‡∂ö / ‡∂Ö‡∂ö‡∑ä‚Äç‡∂ª‡∑í‡∂∫ ‡∂ö‡∑ä‚Äç‡∂ª‡∑í‡∂∫‡∑è‡∑Ä ‡∂Ω‡∂∂‡∑è ‡∂Ø‡∑ô‡∂±‡∑ä‡∂±!\n\n*‡∂ã‡∂Ø‡∑è‡∑Ñ‡∂ª‡∂´‡∂∫‡∂ö‡∑ä:*\n\n${prefix}pmchatbot on`
          );
        }
        chechSenderModStatus = await checkMod(m.sender);
        if (!chechSenderModStatus && !isCreator && !isintegrated) {
          await doReact("‚ùå");
          return Pendragon.sendMessage(m.from, {
            text: `‡∑É‡∂∏‡∑è‡∑Ä‡∂±‡∑ä‡∂±, ‡∂∏‡∑ô‡∂∏ ‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫ ‡∂∑‡∑è‡∑Ä‡∑í‡∂≠‡∑è ‡∂ö‡∑Ö ‡∑Ñ‡∑ê‡∂ö‡∑ä‡∂ö‡∑ö *‡∑Ñ‡∑í‡∂∏‡∑í‡∂ö‡∂ª‡∑î‡∑Ä‡∂±‡∑ä* ‡∑É‡∑Ñ *Mods* ‡∂¥‡∂∏‡∂´‡∑í!`,
            quoted: m,
          });
        }
        pmChatBotStatus = await checkPmChatbot();
        await doReact("üß©");
        if (args[0] === "on") {
          if (pmChatBotStatus) {
            await doReact("‚ùå");
            return Pendragon.sendMessage(m.from, {
              text: `‡∂¥‡∑î‡∂Ø‡∑ä‡∂ú‡∂Ω‡∑í‡∂ö Chatbot ‡∂Ø‡∑ê‡∂±‡∂ß‡∂∏‡∂≠‡∑ä *‡∑É‡∂∂‡∂Ω ‡∂ö‡∂ª ‡∂á‡∂≠* !`,
              quoted: m,
            });
          } else {
            await activateChatBot();
            await m.reply(
              `*PM Chatbot* *‡∑É‡∂∂‡∂Ω ‡∂ö‡∂ª ‡∂á‡∂≠* ‡∑É‡∑è‡∂ª‡∑ä‡∂Æ‡∂ö‡∑Ä ! \n\n‡∂∂‡∑ú‡∂ß‡∑ä ‡∑É‡∑í‡∂∫‡∂Ω‡∑î‡∂∏ ‡∂ö‡∂≠‡∑è‡∂∂‡∑É‡∑ä ‡∑Ä‡∂Ω‡∂ß PM ‡∑Ñ‡∑í ‡∂¥‡∑í‡∑Ö‡∑í‡∂≠‡∑î‡∂ª‡∑î ‡∂Ø‡∑ô‡∂±‡∑î ‡∂á‡∂≠!`
            );
          }
        } else if (args[0] === "off") {
          if (!pmChatBotStatus) {
            await doReact("‚ùå");
            return Pendragon.sendMessage(m.from, {
              text: `Private Chatbot ‡∂Ø‡∑ê‡∂±‡∂ß‡∂∏‡∂≠‡∑ä *Disabled* !`,
              quoted: m,
            });
          } else {
            await deactivateChatBot();
            await m.reply(`*PM Chatbot* *‡∂Ö‡∂∂‡∂Ω ‡∂ö‡∂ª ‡∂á‡∂≠* ‡∑É‡∑è‡∂ª‡∑ä‡∂Æ‡∂ö‡∑Ä !`);
          }
        } else {
          await doReact("‚ùå");
          return m.reply(
            `‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª ‡∂ö‡∑ä‚Äç‡∂ª‡∑í‡∂∫‡∑è‡∂≠‡∑ä‡∂∏‡∂ö / ‡∂Ö‡∂ö‡∑ä‚Äç‡∂ª‡∑í‡∂∫ ‡∂ö‡∑ä‚Äç‡∂ª‡∑í‡∂∫‡∑è‡∑Ä ‡∂Ω‡∂∂‡∑è ‡∂Ø‡∑ô‡∂±‡∑ä‡∂±!\n\n*‡∂ã‡∂Ø‡∑è‡∑Ñ‡∂ª‡∂´‡∂∫‡∂ö‡∑ä:*\n\n${prefix}pmchatbot on`
          );
        }

        break;

      case "bangroup":
      case "bangc":
        if (!m.isGroup) {
          await doReact("‚ùå");
          return m.reply(`‡∂∏‡∑ô‡∂∏ ‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫ ‡∂∑‡∑è‡∑Ä‡∑í‡∂≠‡∑è ‡∂ö‡∑Ö ‡∑Ñ‡∑ê‡∂ö‡∑ä‡∂ö‡∑ö ‡∂ö‡∂´‡∑ä‡∂©‡∑è‡∂∫‡∂∏‡∑ä ‡∑Ä‡∑Å‡∂∫‡∑ô‡∂±‡∑ä ‡∂¥‡∂∏‡∂´‡∑í!`);
        }

        chechSenderModStatus = await checkMod(m.sender);
        if (!chechSenderModStatus && !isCreator && !isintegrated) {
          await doReact("‚ùå");
          return Pendragon.sendMessage(m.from, {
            text: `‡∑É‡∂∏‡∑è‡∑Ä‡∂±‡∑ä‡∂±, ‡∂∏‡∑ô‡∂∏ ‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫ ‡∂∑‡∑è‡∑Ä‡∑í‡∂≠‡∑è ‡∂ö‡∑Ö ‡∑Ñ‡∑ê‡∂ö‡∑ä‡∂ö‡∑ö *‡∑Ñ‡∑í‡∂∏‡∑í‡∂ö‡∂ª‡∑î‡∑Ä‡∂±‡∑ä* ‡∑É‡∑Ñ *Mods* ‡∂¥‡∂∏‡∂´‡∑í!`,
            quoted: m,
          });
        }

        groupBanStatus = await checkBanGroup(m.from);
        if (groupBanStatus) {
          await doReact("‚ùå");
          return Pendragon.sendMessage(m.from, {
            text: `‡∂∏‡∑ô‡∂∏ ‡∂ö‡∂´‡∑ä‡∂©‡∑è‡∂∫‡∂∏ ‡∂Ø‡∑ê‡∂±‡∂ß‡∂∏‡∂≠‡∑ä *‡∂≠‡∑Ñ‡∂±‡∂∏‡∑ä ‡∂ö‡∂ª ‡∂á‡∂≠* !`,
            quoted: m,
          });
        } else {
          await doReact("üß©");
          await banGroup(m.from);
          await m.reply(`*${groupName}* ‡∑É‡∑è‡∂ª‡∑ä‡∂Æ‡∂ö‡∑Ä *‡∂≠‡∑Ñ‡∂±‡∂∏‡∑ä ‡∂ö‡∂ª ‡∂á‡∂≠* !`);
        }

        break;

      case "unbangroup":
      case "unbangc":
        if (!m.isGroup) {
          await doReact("‚ùå");
          return m.reply(`‡∂∏‡∑ô‡∂∏ ‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫ ‡∂∑‡∑è‡∑Ä‡∑í‡∂≠‡∑è ‡∂ö‡∑Ö ‡∑Ñ‡∑ê‡∂ö‡∑ä‡∂ö‡∑ö ‡∂ö‡∂´‡∑ä‡∂©‡∑è‡∂∫‡∂∏‡∑ä ‡∑Ä‡∑Å‡∂∫‡∑ô‡∂±‡∑ä ‡∂¥‡∂∏‡∂´‡∑í!`);
        }

        chechSenderModStatus = await checkMod(m.sender);
        if (!chechSenderModStatus && !isCreator && !isintegrated) {
          await doReact("‚ùå");
          return Pendragon.sendMessage(m.from, {
            text: `‡∑É‡∂∏‡∑è‡∑Ä‡∂±‡∑ä‡∂±, ‡∂∏‡∑ô‡∂∏ ‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫ ‡∂∑‡∑è‡∑Ä‡∑í‡∂≠‡∑è ‡∂ö‡∑Ö ‡∑Ñ‡∑ê‡∂ö‡∑ä‡∂ö‡∑ö *‡∑Ñ‡∑í‡∂∏‡∑í‡∂ö‡∂ª‡∑î‡∑Ä‡∂±‡∑ä* ‡∑É‡∑Ñ *Mods* ‡∂¥‡∂∏‡∂´‡∑í!`,
            quoted: m,
          });
        }

        groupBanStatus = await checkBanGroup(m.from);
        if (!groupBanStatus) {
          await doReact("‚ùå");
          return Pendragon.sendMessage(m.from, {
            text: `‡∂∏‡∑ô‡∂∏ ‡∂ö‡∂´‡∑ä‡∂©‡∑è‡∂∫‡∂∏ ‡∂≠‡∑Ñ‡∂±‡∂∏‡∑ä ‡∂±‡∑ú‡∑Ä‡∑ö!`,
            quoted: m,
          });
        } else {
          await doReact("üß©");
          await unbanGroup(m.from);
          await m.reply(`*${groupName}* ‡∑É‡∑è‡∂ª‡∑ä‡∂Æ‡∂ö‡∑Ä *‡∂≠‡∑Ñ‡∂±‡∂∏‡∑ä ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏ ‡∂â‡∑Ä‡∂≠‡∑ä ‡∂ö‡∂ª ‡∂á‡∂≠* !`);
        }

        break;

      case "setbotmode":
      case "mode":
        if (!text) {
          await doReact("‚ùå");
          return m.reply(
            `‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª *‡∑É‡∑ä‡∑Ä‡∂∫‡∂Ç / ‡∂¥‡∑î‡∂Ø‡∑ä‡∂ú‡∂Ω‡∑í‡∂ö / ‡∂¥‡∑ú‡∂Ø‡∑î* ‡∂∏‡∑è‡∂Ø‡∑í‡∂Ω‡∑í‡∂∫‡∑ö ‡∂±‡∂∏‡∑ä ‡∂Ω‡∂∂‡∑è ‡∂Ø‡∑ô‡∂±‡∑ä‡∂±!\n\n*‡∂ã‡∂Ø‡∑è‡∑Ñ‡∂ª‡∂´‡∂∫‡∂ö‡∑ä:*\n\n${prefix}mode public`
          );
        }

        chechSenderModStatus = await checkMod(m.sender);
        if (!chechSenderModStatus && !isCreator && !isintegrated) {
          await doReact("‚ùå");
          return Pendragon.sendMessage(m.from, {
            text: `‡∑É‡∂∏‡∑è‡∑Ä‡∂±‡∑ä‡∂±, ‡∂∏‡∑ô‡∂∏ ‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫ ‡∂∑‡∑è‡∑Ä‡∑í‡∂≠‡∑è ‡∂ö‡∑Ö ‡∑Ñ‡∑ê‡∂ö‡∑ä‡∂ö‡∑ö *‡∑Ñ‡∑í‡∂∏‡∑í‡∂ö‡∂ª‡∑î‡∑Ä‡∂±‡∑ä* ‡∑É‡∑Ñ *Mods* ‡∂¥‡∂∏‡∂´‡∑í!`,
            quoted: m,
          });
        }

        chechbotMode = await getBotMode();

        if (args[0] == "self") {
          if (chechbotMode == "self") {
            await doReact("‚ùå");
            return m.reply(
              `‡∂∂‡∑ú‡∂ß‡∑ä ‡∂Ø‡∑ê‡∂±‡∂ß‡∂∏‡∂≠‡∑ä *‡∑É‡∑ä‡∑Ä‡∂∫‡∂Ç* ‡∂∏‡∑è‡∂Ø‡∑í‡∂Ω‡∑í‡∂∫‡∑ö ‡∂á‡∂≠ !\n\nbot ‡∂∑‡∑è‡∑Ä‡∑í‡∂≠‡∑è ‡∂ö‡∑Ö ‡∑Ñ‡∑ê‡∂ö‡∑ä‡∂ö‡∑ö *Bot Hoster (Bot number)* ‡∑Ñ‡∂ß ‡∂¥‡∂∏‡∂´‡∑í.`
            );
          } else {
            await doReact("üß©");
            await setBotMode("self");
            await m.reply(`‡∂∂‡∑ú‡∂ß‡∑ä *‡∑É‡∑ä‡∑Ä‡∂∫‡∂Ç* ‡∂¥‡∑ä‚Äç‡∂ª‡∂ö‡∑è‡∂ª‡∂∫‡∂ß ‡∑É‡∂ö‡∑É‡∑è ‡∂á‡∂≠ ‡∑É‡∑è‡∂ª‡∑ä‡∂Æ‡∂ö‡∂∫‡∑í !`);
          }
        } else if (args[0] == "private") {
          if (chechbotMode == "private") {
            await doReact("‚ùå");
            return m.reply(
              `‡∂∂‡∑ú‡∂ß‡∑ä ‡∂Ø‡∑ê‡∂±‡∂ß‡∂∏‡∂≠‡∑ä *‡∂¥‡∑û‡∂Ø‡∑ä‡∂ú‡∂Ω‡∑í‡∂ö* ‡∂∏‡∑è‡∂Ø‡∑í‡∂Ω‡∑í‡∂∫‡∑ö ‡∂á‡∂≠ !\n\nbot *‡∑Ñ‡∑í‡∂∏‡∑í‡∂ö‡∂ª‡∑î‡∑Ä‡∂±‡∑ä / Mods* ‡∑Ñ‡∂ß ‡∂¥‡∂∏‡∂´‡∂ö‡∑ä bot ‡∂∑‡∑è‡∑Ä‡∑í‡∂≠‡∑è ‡∂ö‡∑Ö ‡∑Ñ‡∑ê‡∂ö.`
            );
          } else {
            await doReact("üß©");
            await setBotMode("private");
            await m.reply(`‡∂∂‡∑ú‡∂ß‡∑ä *‡∂¥‡∑û‡∂Ø‡∑ä‡∂ú‡∂Ω‡∑í‡∂ö* ‡∂¥‡∑ä‚Äç‡∂ª‡∂ö‡∑è‡∂ª‡∂∫‡∂ß ‡∑É‡∂ö‡∑É‡∑è ‡∂á‡∂≠ ‡∑É‡∑è‡∂ª‡∑ä‡∂Æ‡∂ö‡∂∫‡∑í !`);
          }
        } else if (args[0] == "public") {
          if (chechbotMode == "public") {
            await doReact("‚ùå");
            return m.reply(
              `‡∂∂‡∑ú‡∂ß‡∑ä ‡∂Ø‡∑ê‡∂±‡∂ß‡∂∏‡∂≠‡∑ä *‡∂¥‡∑ú‡∂Ø‡∑î* ‡∂∏‡∑è‡∂Ø‡∑í‡∂Ω‡∑í‡∂∫‡∑ö ‡∂á‡∂≠!\n\n‡∂ï‡∂±‡∑ë‡∂∏ ‡∂ö‡∑ô‡∂±‡∑ô‡∂ö‡∑î‡∂ß bot ‡∂∑‡∑è‡∑Ä‡∑í‡∂≠‡∑è ‡∂ö‡∑Ö ‡∑Ñ‡∑ê‡∂ö‡∑í‡∂∫.`
            );
          } else {
            await doReact("üß©");
            await setBotMode("public");
            await m.reply(`‡∂∂‡∑ú‡∂ß‡∑ä *‡∂¥‡∑ú‡∂Ø‡∑î* ‡∂¥‡∑ä‚Äç‡∂ª‡∂ö‡∑è‡∂ª‡∂∫‡∂ß ‡∑É‡∂ö‡∑É‡∑è ‡∂á‡∂≠ ‡∑É‡∑è‡∂ª‡∑ä‡∂Æ‡∂ö‡∂∫‡∑í !`);
          }
        } else {
          await doReact("‚ùå");
          return m.reply(
            `‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª *‡∑É‡∑ä‡∑Ä‡∂∫‡∂Ç / ‡∂¥‡∑î‡∂Ø‡∑ä‡∂ú‡∂Ω‡∑í‡∂ö / ‡∂¥‡∑ú‡∂Ø‡∑î* ‡∂∏‡∑è‡∂Ø‡∑í‡∂Ω‡∑í‡∂∫‡∑ö ‡∂±‡∂∏‡∑ä ‡∂Ω‡∂∂‡∑è ‡∂Ø‡∑ô‡∂±‡∑ä‡∂±!\n\n*‡∂ã‡∂Ø‡∑è‡∑Ñ‡∂ª‡∂´‡∂∫‡∂ö‡∑ä:*\n\n${prefix}mode public`
          );
        }

        break;

      default:
        break;
    }
  },
};
